<?xml version="1.0" encoding="utf-8"?>

<test>
<name>percolate queries via http</name>

<requires>
<http/>
<force-rt/>
</requires>
<skip_indexer/>

<config>
searchd
{
	<searchd_settings/>
	binlog_path =
}

index idx1
{
	type = percolate
	path			= <data_path/>/pq1
	rt_field = title
	rt_attr_uint = gid
}

index idx2
{
	type = percolate
	path			= <data_path/>/pq2
	rt_field = title
	rt_attr_uint = gid
}

</config>

<queries>
<!-- store queries -->
<query endpoint="pq/idx1/doc">{ "query": { "match": { "title": "test" } }, "tags":["id", "id_x1"] }</query>
<query endpoint="pq/idx1/doc">{ "query": { "match": { "title": { "query": "cat test", "operator": "and" } } }, "tags":["id", "id_x2"] }</query>
<query endpoint="pq/idx1/doc/10">{ "query": { "match": { "title": { "query": "dog test", "operator": "and" } } }, "tags":["id", "id_x10"] }</query>
<query endpoint="pq/idx1/search"/>


<!-- issue matching -->
<query endpoint="pq/idx1/search">{ "query": { "percolate": { "document" : { "title" : "A new tree test in the office office" } } } }</query>
<query endpoint="pq/idx1/search">{ "query": { "percolate": { "documents" : [{ "title" : "A new tree test in the office" }, { "title" : "A cat test in the office" }, { "title" : "A dog test in the office" }] } } }</query>

<sphinxql system="restart-daemon"/>

<!-- issue matching -->
<query endpoint="json/pq/idx1/search">{ "query": { "percolate": { "document" : { "title" : "A new tree test in the office office" } } } }</query>
<query endpoint="json/pq/idx1/search">{ "query": { "percolate": { "documents" : [{ "title" : "A new tree test in the office" }, { "title" : "A cat test in the office" }, { "title" : "A dog test in the office" }] } } }</query>

<!-- replace query -->
<query endpoint="json/pq/idx1/doc/1677721600001">{ "query": { "match": { "title": "nop" } } }</query>
<query endpoint="json/pq/idx1/doc/1677721600001?refresh=1">{ "query": { "match": { "title": { "query": "cat dog test", "operator": "or" } } }, "tags":["id", "id_x101"] }</query>
<!-- list stored queries -->
<query endpoint="json/pq/idx1/search"/>

<!-- delete by id -->
<query endpoint="json/pq/idx1/_delete_by_query">{ "id": [1677721600002, 10] }</query>
<query endpoint="json/pq/idx1/search"/>
<!-- delete by tags -->
<query endpoint="json/pq/idx1/_delete_by_query">{ "tags": ["id_x1", "id_x2"] }</query>
<query endpoint="json/pq/idx1/search"/>
<query endpoint="json/pq/idx1/_delete_by_query">{ "tags": ["id"] }</query>
<query endpoint="json/pq/idx1/search"/>

<!-- bool query -->
<query endpoint="json/pq/idx1/doc/">{ "query": { "bool": { "must": [ { "match": { "title": "tree" } }, { "match": { "title": "test" } } ] } }, "tags":["id", "id_x1"]  }</query>
<query endpoint="json/pq/idx1/search">{ "query": { "percolate": { "documents" : [{ "title" : "A new tree test in the office" }, { "title" : "A cat test in the office" }, { "title" : "A dog test in the office" }] } } }</query>

<!-- query native filter -->
<query endpoint="json/pq/idx1/doc/">{ "query": { "match": { "title": "tree" }, "range": { "gid": { "lt": 3 } } }, "tags":["id", "id_x2"] }</query>
<query endpoint="json/pq/idx1/search">{ "query": { "percolate": { "documents": [{ "title" : "new tree test", "gid":1 }, { "title": "old tree test", "gid":2 }, { "title": "custom tree test", "gid":3 }] } } }</query>

<!-- query QL filter -->
<query endpoint="json/pq/idx1/doc/">{ "query": { "match": { "title": "tree" } }, "filters":"gid &lt; 3", "tags":["id", "id_x3"] }</query>
<query endpoint="json/pq/idx1/search">{ "query": { "percolate": { "documents": [{ "title" : "new tree test", "gid":1 }, { "title": "old tree test", "gid":2 }, { "title": "custom tree test", "gid":3 }] } } }</query>

<!-- QL query -->
<query endpoint="json/pq/idx1/doc/">{ "query": { "ql": "tree !new" }, "filters":"gid &lt; 3", "tags":["id", "id_x4"] }</query>
<query endpoint="json/pq/idx1/search">{ "query": { "percolate": { "documents": [{ "title" : "new tree test", "gid":1 }, { "title": "old tree test", "gid":2 }, { "title": "custom tree test", "gid":3 }] } } }</query>

<query endpoint="json/pq/idx1/doc/">{ "query": { "ql": "new | old" }, "tags":["id", "id_x5"] }</query>
<query endpoint="json/pq/idx1/search">{ "query": { "percolate": { "documents": [{ "title" : "new tree test", "gid":1 }, { "title": "old tree test", "gid":2 }, { "title": "custom tree test", "gid":3 }] } } }</query>

<query endpoint="json/pq/idx1/search"/>

<query endpoint="json/pq/idx1/missed">{ "query": { "percolate": { "document" : { "title" : "test" } } } }</query>

<sphinxql>
	select * from idx1 where query='new | old';
	select * from idx1 where query='{"match":{"title":"tree"}}';
	select * from idx1 where tags='id, id_x1';
	select * from idx1 where filters='gid&lt;3';
</sphinxql>

</queries>

</test>
